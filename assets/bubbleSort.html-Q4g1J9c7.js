const n=JSON.parse('{"key":"v-63fc7f54","path":"/algorithm/bubbleSort.html","title":"《冒泡排序》","lang":"zh-CN","frontmatter":{"icon":"/icons/tool.svg","date":"2020-10-15T00:00:00.000Z","category":["Java","数据结构与算法"],"tag":["排序"]},"headers":[],"git":{"createdTime":1712907658000,"updatedTime":1712907658000,"contributors":[{"name":"sz-Dawson","email":"dragon.zbl@qq.com","commits":1}]},"readingTime":{"minutes":0.33,"words":99},"filePathRelative":"algorithm/bubbleSort.md","localizedDate":"2020年10月15日","excerpt":"<h1> 《冒泡排序》</h1>\\n<p>时间复杂度：</p>\\n<ul>\\n<li>\\n<p>平均：O(n<sup>2</sup>)</p>\\n</li>\\n<li>\\n<p>最坏：O(n<sup>2</sup>)</p>\\n</li>\\n<li>\\n<p>最好：O(n)</p>\\n</li>\\n</ul>\\n<p>空间复杂度：O(1)</p>\\n<p>稳定</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">bubbleSort</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> data<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">int</span> dataLength <span class=\\"token operator\\">=</span> data<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">int</span> temp<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> dataLength<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i1 <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i1 <span class=\\"token operator\\">&lt;</span> dataLength <span class=\\"token operator\\">-</span> i<span class=\\"token punctuation\\">;</span> i1<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">[</span>i1<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">&gt;</span> data<span class=\\"token punctuation\\">[</span>i1 <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n                    temp <span class=\\"token operator\\">=</span> data<span class=\\"token punctuation\\">[</span>i1 <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n                    data<span class=\\"token punctuation\\">[</span>i1 <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> data<span class=\\"token punctuation\\">[</span>i1<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n                    data<span class=\\"token punctuation\\">[</span>i1<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span>temp<span class=\\"token punctuation\\">;</span>\\n                <span class=\\"token punctuation\\">}</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};
