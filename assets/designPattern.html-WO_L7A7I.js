const e=JSON.parse('{"key":"v-7dca0240","path":"/designPattern.html","title":"《设计模式》","lang":"zh-CN","frontmatter":{"icon":"/icons/tool.svg","date":"2022-03-03T00:00:00.000Z","category":["Java","设计模式"],"tag":["设计模式"]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"单例模式","slug":"单例模式","link":"#单例模式","children":[]},{"level":2,"title":"代理模式","slug":"代理模式","link":"#代理模式","children":[]},{"level":2,"title":"工厂模式","slug":"工厂模式","link":"#工厂模式","children":[]}],"git":{"createdTime":1713681715000,"updatedTime":1713768359000,"contributors":[{"name":"sz-Dawson","email":"dragon.zbl@qq.com","commits":4}]},"readingTime":{"minutes":3.74,"words":1121},"filePathRelative":"designPattern.md","localizedDate":"2022年3月3日","excerpt":"<h1> 《设计模式》</h1>\\n<h2> 简介</h2>\\n<ul>\\n<li>\\n<p>设计模式是软件开发人员在软件开发过程中面临复杂度问题的一般问题的解决方案</p>\\n</li>\\n<li>\\n<p>设计模式（Design pattern）是重构解决方案不是开发的解决方案</p>\\n</li>\\n<li>\\n<p>设计模式是一套被反复使用的、多数人知晓的、经过分类编目的、代码设计经验的总结</p>\\n</li>\\n<li>\\n<p>使用设计模式是为了重用代码、让代码更容易被他人理解、保证代码可靠性</p>\\n</li>\\n<li>\\n<p>毫无疑问，设计模式于己于他人于系统都是多赢的，设计模式使代码编制真正工程化，设计模式是软件工程的基石，如同大厦的一块块砖石一样</p>\\n</li>\\n<li>\\n<p>项目中合理地运用设计模式可以完美地解决很多问题，每种模式在现实中都有相应的原理来与之对应，每种模式都描述了一个在我们周围不断重复发生的问题，以及该问题的核心解决方案，这也是设计模式能被广泛应用的原因</p>\\n</li>\\n</ul>"}');export{e as data};
