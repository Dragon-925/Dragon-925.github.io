const a=JSON.parse('{"key":"v-3819d3ba","path":"/language/Java/Jdk8.html","title":"《Lambda表达式》","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2019-01-09T00:00:00.000Z","category":["Java"],"tag":["JDK新特新"]},"headers":[{"level":2,"title":"一、为什么要使用Lambda表达式","slug":"一、为什么要使用lambda表达式","link":"#一、为什么要使用lambda表达式","children":[]},{"level":2,"title":"二、理解Functional Interface(函数式接口)","slug":"二、理解functional-interface-函数式接口","link":"#二、理解functional-interface-函数式接口","children":[{"level":3,"title":"Lambda演变史","slug":"lambda演变史","link":"#lambda演变史","children":[]}]}],"git":{"createdTime":1705562750000,"updatedTime":1705660732000,"contributors":[{"name":"itsni","email":"dragon.zbl@qq.com","commits":1},{"name":"sz-Dawson","email":"dragon.zbl@qq.com","commits":1}]},"readingTime":{"minutes":1.34,"words":401},"filePathRelative":"language/Java/Jdk8.md","localizedDate":"2019年1月9日","excerpt":"<h1> 《Lambda表达式》</h1>\\n<h2> 一、为什么要使用Lambda表达式</h2>\\n<ul>\\n<li>避免匿名内部类定义过多</li>\\n<li>让代码看起来简洁</li>\\n<li>去掉多余没有意义的代码</li>\\n<li>留下核心逻辑</li>\\n<li>Lambda是在JDK1.8中产生的</li>\\n</ul>\\n<h2> 二、理解Functional Interface(函数式接口)</h2>\\n<ul>\\n<li>\\n<p>函数式接口是学习Java8 lambda表达式的关键所在</p>\\n</li>\\n<li>\\n<p>函数式接口定义：</p>\\n<ul>\\n<li>任何接口，如果只包含唯一一个抽象方法，那么他就是一个函数式接口</li>\\n</ul>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">interface</span> <span class=\\"token class-name\\">Runnable</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">abstract</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">run</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">//接口中默认方法为抽象方法，也可以不写abstract修饰符</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><ul>\\n<li>对于函数式接口，我们可以通过lambda表达式来创建该接口的对象</li>\\n</ul>\\n</li>\\n</ul>"}');export{a as data};
