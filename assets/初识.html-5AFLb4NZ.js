const e=JSON.parse('{"key":"v-38fcc358","path":"/%E6%95%B0%E6%8D%AE%E5%BA%93/Elasticsearch/%E5%88%9D%E8%AF%86.html","title":"《初识》","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2022-03-29T00:00:00.000Z","category":["Elasticsearch"],"tag":["数据库","倒排索引"]},"headers":[],"git":{"createdTime":1711689085000,"updatedTime":1711690534000,"contributors":[{"name":"sz-Dawson","email":"dragon.zbl@qq.com","commits":3}]},"readingTime":{"minutes":7.25,"words":2175},"filePathRelative":"数据库/Elasticsearch/初识.md","localizedDate":"2022年3月29日","excerpt":"<h1> 《初识》</h1>\\n<blockquote>\\n<p>基本概念</p>\\n</blockquote>\\n<p>与MySQL对比：\\n数据库----索引（名词对应数据库，动词对应数据库中的保存）\\n表-----类型\\n行-----文档\\n列-----属性</p>\\n<blockquote>\\n<p>什么是倒排索引？</p>\\n</blockquote>\\n<p>说到倒排索引，要先说到正向索引。\\n什么是正向索引？\\n其实正向索引很简单，比如MySQL中的user表，我们为其每行数据添加主键ID，\\n当我们查找ID为100的数据，我们只需要找到ID为100的那一行，再根据100来查看这一行数据中的列值即可。这就是正向索引！\\n注意：此处并不是从id为1的数据依次对比到100的！\\n这里引入了数据结构中的B+树，在数据库中，如果创建了索引那么就会产生一棵B+树，再根据二分法去比较我们需要查找的值。\\n这样的检索速度就比依次对比快很多。\\n最终会在我们的叶子节点中获取到我们想要的内容。\\n在这里就需要抛出聚簇索引和非聚簇索引\\n1.聚簇索引：叶子节点上存储的是我们需要的信息</p>"}');export{e as data};
