import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as t,o as p,c as o,b as a,e as c,a as n}from"./app-X2KoTqGL.js";const i={},l=n(`<h1 id="《java内存分析》" tabindex="-1"><a class="header-anchor" href="#《java内存分析》" aria-hidden="true">#</a> 《Java内存分析》</h1><h2 id="一、三种初始化" tabindex="-1"><a class="header-anchor" href="#一、三种初始化" aria-hidden="true">#</a> 一、三种初始化</h2><h3 id="_1-静态初始化" tabindex="-1"><a class="header-anchor" href="#_1-静态初始化" aria-hidden="true">#</a> 1.静态初始化</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">Man</span><span class="token punctuation">[</span><span class="token punctuation">]</span> mans <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token keyword">new</span> <span class="token class-name">Man</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Man</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>​ <mark>创建 + 赋值</mark></p><h3 id="_2-动态初始化" tabindex="-1"><a class="header-anchor" href="#_2-动态初始化" aria-hidden="true">#</a> 2.动态初始化</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ <mark>包含默认初始化</mark></p><h3 id="_3-数组默认初始化" tabindex="-1"><a class="header-anchor" href="#_3-数组默认初始化" aria-hidden="true">#</a> 3.数组默认初始化</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>数组也是引用类型，它的元素相当于类的实例变量，因此数组已经分配空间，其中的每个元素也被按照实例变量同样的方式被“隐式初始化”
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="二、java内存分析" tabindex="-1"><a class="header-anchor" href="#二、java内存分析" aria-hidden="true">#</a> 二、Java内存分析</h2><h3 id="_1-内存分析图" tabindex="-1"><a class="header-anchor" href="#_1-内存分析图" aria-hidden="true">#</a> 1.内存分析图</h3>`,12),r={href:"https://imgse.com/i/pFFqBhq",target:"_blank",rel:"noopener noreferrer"},u=a("img",{src:"https://s11.ax1x.com/2024/01/16/pFFqBhq.md.png",alt:"pFFqBhq.md.png",tabindex:"0",loading:"lazy"},null,-1),d=a("figcaption",null,"pFFqBhq.md.png",-1),k=n(`<blockquote><p><strong>存放基本变量类型：会包含这个基本类型的具体数值</strong></p><p><strong>引用对象的变量：会存放这个引用在堆里的具体地址</strong></p></blockquote><hr><h3 id="_2-内存分析举例" tabindex="-1"><a class="header-anchor" href="#_2-内存分析举例" aria-hidden="true">#</a> 2.内存分析举例</h3><figure><img src="https://pic.imgdb.cn/item/65a6a978871b83018a02c563.png" alt="image-20220112155430261" tabindex="0" loading="lazy"><figcaption>image-20220112155430261</figcaption></figure><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">;</span><span class="token comment">//第一步压栈</span>

array <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//第二部在堆中开辟一块6个空间，每个内存均为0</span>

array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//将堆中数据更改</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function m(h,v){const s=t("ExternalLinkIcon");return p(),o("div",null,[l,a("figure",null,[a("a",r,[u,c(s)]),d]),k])}const _=e(i,[["render",m],["__file","Java内存分析.html.vue"]]);export{_ as default};
